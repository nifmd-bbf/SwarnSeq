% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ZINBEM.R
\name{ZINBEM}
\alias{ZINBEM}
\title{Estimating Parameters via the Expected-Maximization algorithm.}
\usage{
ZINBEM(
  counts_data,
  group,
  CellCluster,
  CellAuxil = NULL,
  weights = NULL,
  muoffset = NULL,
  phioffset = NULL,
  maxit = NULL,
  eps = NULL
)
}
\arguments{
\item{counts_data}{This is a gene-by-cell raw count matrix.}

\item{group}{This is a vector of factors with 2 levels that serves as a grouping variable that assigns each column (cell) of the count matrix to one of two predefined experimental conditions.}

\item{CellCluster}{This is a vector of factors with the optimal number of cluster levels, with each entry assigning a cell from the count matrix's columns to its computationally inferred cluster identity.}

\item{CellAuxil}{This is a vector of factors of cell-level metadata that provides additional information about each cell, such as its batch, donor, or quality control metrics, with each entry aligning to a column in the count matrix.}

\item{weights}{This is the observation-wise weight for the cells, with a default value of NULL.}

\item{muoffset}{This is the offset parameter for mean (mu), with a default value of NULL.}

\item{phioffset}{This is the offset parameter for the zero inflation (phi) parameter, with a default value of NULL.}

\item{maxit}{This is the maximum number of iterations for the Expected-Maximization (EM) algorithm.}

\item{eps}{This is the convergence criteria for the Expected-Maximization (EM) algorithm.}
}
\value{
This function returns a list of results.
}
\description{
This function uses the Expected-Maximization (EM) algorithm to estimate the maximum likelihood estimates (MLE) of the parameters.
}
\examples{
# Paste the example into your R console and run it.
# Load the test data.
data("TestData")
counts_data <- as.matrix(TestData$CountData)
group <- c(rep(1,200), rep(2,200))
CellCluster <- c(rep(1,60), rep(2,90), rep(3, 80), rep(4, 95), rep(5, 75))
group <- as.factor(group)
CellCluster <- as.factor(CellCluster)
results <- SwarnSeq::ZINBEM(counts_data = counts_data, group = group, CellCluster = CellCluster)
}
